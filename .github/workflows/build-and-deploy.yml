env:
  DOCKER_IMAGE_NAME: "${{ secrets.DOCKERHUB_USERNAME }}/beny-bot-image:latest"

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/production/dockerfiles/backend.Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}
          build-args: |
            ADMIN_CHAT_ID=${{ secrets.ADMIN_CHAT_ID }}
            CHANNEL_ID=${{ secrets.CHANNEL_ID }}
            GROUP_CHAT_ID=${{ secrets.GROUP_CHAT_ID }}
            MODERATOR_CHAT_ID=${{ secrets.MODERATOR_CHAT_ID }}
            TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            NODE_ENV=PRODUCTION
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
      - name: Install SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
      - name: Copy docker-compose.yml
        run: scp docker/production/docker-compose.yaml root@185.197.75.131:docker-compose.yml
      - name: Connect, pull and start app
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker-compose pull && docker-compose up -d && exit"