env:
  DOCKER_IMAGE_NAME: "${{ secrets.DOCKERHUB_USERNAME }}/beny-bot-image:latest"

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/production/dockerfiles/backend.Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}
          build-args: |
            ADMIN_CHAT_ID_ARG=${{ secrets.ADMIN_CHAT_ID }}
            CHANNEL_ID_ARG=${{ secrets.CHANNEL_ID }}
            GROUP_CHAT_ID_ARG=${{ secrets.GROUP_CHAT_ID }}
            MODERATOR_CHAT_ID_ARG=${{ secrets.MODERATOR_CHAT_ID }}
            TELEGRAM_BOT_TOKEN_ARG=${{ secrets.TELEGRAM_BOT_TOKEN }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy docker-compose.yml
        run: |
          scp -o StrictHostKeyChecking=no docker/production/docker-compose.yaml ${{ secrets.SSH_USER}}@${{secrets.SSH_HOST}}:docker-compose.yml
      - name: Connect, pull and start app
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker compose pull && docker compose up -d --build --force-recreate && exit"